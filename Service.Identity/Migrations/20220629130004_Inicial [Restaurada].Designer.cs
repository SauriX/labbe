// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.Identity.Context;

namespace Service.Identity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220629130004_Inicial [Restaurada]")]
    partial class InicialRestaurada
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Service.Identity.Domain.Menu.Menu", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Controlador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("MenuPadreId")
                        .HasColumnType("smallint");

                    b.Property<short>("Orden")
                        .HasColumnType("smallint");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuPadreId");

                    b.ToTable("CAT_Menu");
                });

            modelBuilder.Entity("Service.Identity.Domain.Role.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModifico")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioCreoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioModificoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CAT_Rol");
                });

            modelBuilder.Entity("Service.Identity.Domain.Role.RolePermission", b =>
                {
                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("MenuId")
                        .HasColumnType("smallint");

                    b.Property<bool>("Acceder")
                        .HasColumnType("bit");

                    b.Property<bool>("Crear")
                        .HasColumnType("bit");

                    b.Property<bool>("Descargar")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviarCorreo")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviarWapp")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModifico")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Imprimir")
                        .HasColumnType("bit");

                    b.Property<bool>("Modificar")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UsuarioCreoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioModificoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RolId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("CAT_Rol_Permiso");
                });

            modelBuilder.Entity("Service.Identity.Domain.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModifico")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagPassword")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SucursalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioCreoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioModificoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("CAT_Usuario");
                });

            modelBuilder.Entity("Service.Identity.Domain.User.UserPermission", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("MenuId")
                        .HasColumnType("smallint");

                    b.Property<bool>("Acceder")
                        .HasColumnType("bit");

                    b.Property<bool>("Crear")
                        .HasColumnType("bit");

                    b.Property<bool>("Descargar")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviarCorreo")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviarWapp")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModifico")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Imprimir")
                        .HasColumnType("bit");

                    b.Property<bool>("Modificar")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UsuarioCreoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioModificoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("CAT_Usuario_Permiso");
                });

            modelBuilder.Entity("Service.Identity.Domain.Menu.Menu", b =>
                {
                    b.HasOne("Service.Identity.Domain.Menu.Menu", "MenuPadre")
                        .WithMany("SubMenus")
                        .HasForeignKey("MenuPadreId");

                    b.Navigation("MenuPadre");
                });

            modelBuilder.Entity("Service.Identity.Domain.Role.RolePermission", b =>
                {
                    b.HasOne("Service.Identity.Domain.Menu.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Identity.Domain.Role.Role", "Rol")
                        .WithMany("Permisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Service.Identity.Domain.User.User", b =>
                {
                    b.HasOne("Service.Identity.Domain.Role.Role", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Service.Identity.Domain.User.UserPermission", b =>
                {
                    b.HasOne("Service.Identity.Domain.Menu.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Identity.Domain.User.User", "Usuario")
                        .WithMany("Permisos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Service.Identity.Domain.Menu.Menu", b =>
                {
                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("Service.Identity.Domain.Role.Role", b =>
                {
                    b.Navigation("Permisos");
                });

            modelBuilder.Entity("Service.Identity.Domain.User.User", b =>
                {
                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
